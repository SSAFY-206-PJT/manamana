pipeline {
    agent any
    stages {
        stage("Set Variable") {
            steps {
                script {
                    IMAGE_NAME = "sh80165/manamana-springboot"
                    IMAGE_STORAGE = "https://registry.hub.docker.com"
                    IMAGE_STORAGE_CREDENTIAL = "docker-auth"
                    // SSH_CONNECTION = "ubuntu@j8b206.p.ssafy.io"
                    // SSH_CONNECTION_CREDENTIAL = "deploy-ec2-ssh"
                    SPRING_BUILD_PATH = "./backend/manamana"
                    APPLICATION_YML_PATH = "/var/jenkins_home/workspace"
                    CONTAINER_NAME = "manamana-api"
                    PROJECT_DIR = "spring-boot/backend/"
                    DOCKER_FILE_PATH = "backend/"
                }
            }
        }

        stage("Clean Build Test") {
            steps {
                dir("${SPRING_BUILD_PATH}"){
                    sh "pwd"
                    sh "chmod +x gradlew"
                    sh "./gradlew clean build -x test"
                    sh "ls -al ./build"
                }   
            }
        }
        stage("Copy Application.yml"){
            steps{
                dir("${APPLICATION_YML_PATH}"){
                    sh "pwd"
                    sh "cp -r -f resources ${PROJECT_DIR}"
                }
            }
        }

        stage("Build Container Image") {
            steps {
                dir("${DOCKER_FILE_PATH}"){
                    script {
                        sh "pwd"
                        image = docker.build("${IMAGE_NAME}")

                        sh "docker images"
            
                    }   

                }
                
            }
        }

        stage("Push Container Image") {
            steps {
                script {

                    docker.withRegistry("${IMAGE_STORAGE}", "${IMAGE_STORAGE_CREDENTIAL}") {
                        image.push("latest")
                    }
                }
            }
        }

        stage("Server Run") {
            steps {
                script {

                    // //컨테이너 확인 후 정지
                    // sh "docker ps -f name=${CONTAINER_NAME} -q | xargs --no-run-if-empty docker container stop"

                    // //컨테이너 삭제
                    // sh "docker container ls -a -f name=${CONTAINER_NAME} -q | xargs -r docker container rm"

                    //sudo docker rmi $(sudo docker images registry.hub.docker.com/sh80165/manamana-springboot -q)

                    // 최신 이미지 삭제
                    sh "docker rmi -f ${IMAGE_NAME}:latest"
                    //컨테이너 확인
                    sh "docker ps -a"
                    // 최신 이미지 PULL
                    sh "docker pull ${IMAGE_NAME}:latest"
                    // 이미지 확인
                    sh "docker images"
                    // 최신 이미지 RUN
                    sh "docker run -d --name ${CONTAINER_NAME} -p 8080:8080 ${IMAGE_NAME}:latest"
                    // 컨테이너 확인
                    sh "docker ps -a"
                }   
            }
        }
    }
}
